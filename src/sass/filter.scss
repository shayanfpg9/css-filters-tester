@import "./component/variables";
@import "./component/func-mixin";

* {
  font-family: helvetica;
  @include reset();
}

body {
  width: 95vw;
  border-radius: 10px;

  background-color: #ffffffce;
  border-radius: 10px;
  margin: auto;

  form {
    height: 5rem;
    overflow-y: hidden;

    > div {
      height: 5rem;

      &[multi] {
        overflow-y: scroll;
      }

      &:not(:first-of-type) {
        margin-top: 0.2rem;
      }

      @include scroller(
        (
          width: 3px,
        ),
        #00000000,
        darken(map-get($colors, "border"), 20%),
        none
      );

      label + input {
        margin-bottom: 2.5rem;
      }

      label {
        width: 95%;

        color: map-get($colors, "text");
        font : {
          size: 1.1rem;
          weight: 500;
        }

        > .change-default {
          all: unset;

          width: 20px;
          height: 20px;

          background: {
            repeat: no-repeat;
            position: center;
            size: cover;
            image: url("../images/default.svg");
          }

          cursor: pointer;

          position: relative;
          top: -20%;
          transform: translateY(100%);

          margin-top: -1.8rem;
        }
      }

      input {
        all: unset;

        width: 95%;

        margin: {
          left: 2.5%;
          top: 1rem;
        }

        &[type="range"] {
          height: 0.3rem;
          background-color: map-get($colors, "range");
          border-radius: 10px;
          cursor: pointer;
          position: relative;

          &::-webkit-slider-thumb {
            -webkit-appearance: none;
            @include rangestyle();
          }

          &::-moz-range-thumb {
            all: unset;
            @include rangestyle();
          }

          &::before {
            @extend %after-before;

            content: attr(min) + attr(suffix);
            left: 0;
          }

          &::after {
            @extend %after-before;

            content: attr(max) + attr(suffix);
            right: 0;
          }
        }
      }
    }
  }

  ul {
    list-style: none;
    margin-bottom: 1rem;

    width: auto;
    min-width: 95vw;
    overflow-x: scroll;
    overflow-y: hidden !important;
    padding-bottom: 5px;

    @include flex(flex-start, center, row);
    @include scroller(
      (
        height: 3px,
      ),
      #00000000,
      darken(map-get($colors, "border"), 20%),
      none
    );

    &.show- {
      &filters {
        > li[effect="filter"] {
          display: block;
        }
      }

      &transforms {
        > li[effect="transform"] {
          display: block;
        }
      }
    }

    > {
      li {
        display: none;
        flex: 1;
        min-width: 8rem;
        padding: 1rem;
        text-align: center;
        color: map-get($colors, "text");
        cursor: pointer;
        font: {
          size: 1.1rem;
        }

        &:not(:first-child) {
          margin-left: 10px;
        }

        // border: {
        //   bottom: 3px solid darken(mix(map-get($colors, "border") , blue , 80%) , 20%) {
        //     // left-radius: 5px;
        //     // right-radius: 5px;
        //   }
        // }

        // &:active {
        //   border-width: 2px;
        // }

        &:not(:last-child)::after {
          content: " ";
        }
      }
    }
  }
}

%after-before {
  min-width: 2.5rem;
  height: 1.5rem;

  position: absolute;
  top: 0.8rem;
  z-index: 2;
  @include flex();

  border-radius: 5px;
  color: map-get($colors, "text");
}
